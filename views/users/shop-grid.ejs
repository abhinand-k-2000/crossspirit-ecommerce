<%- include('../layouts/header') %>


		<!--end top header wrapper-->
		<!--start page wrapper -->
		<div class="page-wrapper">
			<div class="page-content">
				<!--start breadcrumb-->
				<section class="py-3 border-bottom border-top d-none d-md-flex bg-light">
					<div class="container">
						<div class="page-breadcrumb d-flex align-items-center">
							<h3 class="breadcrumb-title pe-3">Shop </h3>
							<div class="ms-auto">
								<nav aria-label="breadcrumb">
									<ol class="breadcrumb mb-0 p-0">
										<li class="breadcrumb-item"><a href="javascript:;"><i class="bx bx-home-alt"></i> Home</a>
										</li>
										<li class="breadcrumb-item"><a href="javascript:;">Shop</a>
										</li>
										<li class="breadcrumb-item active" aria-current="page">Shop Left Sidebar</li>
									</ol>
								</nav>
							</div>
						</div>
					</div>
				</section>
				<!--end breadcrumb-->
				<!--start shop area-->
				<section class="py-4">
					<div class="container">
						<div class="btn btn-dark btn-ecomm d-xl-none position-fixed top-50 start-0 translate-middle-y z-index-1"  data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbarFilter"><span><i class='bx bx-filter-alt me-1'></i>Filters</span></div>
						<div class="row">
							<div class="col-12 col-xl-3 filter-column">
								<nav class="navbar navbar-expand-xl flex-wrap p-0">
								  <div class="offcanvas offcanvas-start" tabindex="-1" id="offcanvasNavbarFilter" aria-labelledby="offcanvasNavbarFilterLabel">
									<div class="offcanvas-header">
									  <h5 class="offcanvas-title mb-0 fw-bold" id="offcanvasNavbarFilterLabel">Filters</h5>
									  <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
									</div>
									<div class="offcanvas-body">
									  <div class="filter-sidebar">
										<div class="card rounded-0 shadow-none border">
											<div class="card-header d-none d-xl-block bg-transparent">
											  <h5 class="mb-0 fw-bold">Filters</h5>
											</div>
											<div class="card-body">
											  <h6 class="p-1 fw-bold bg-light">Categories</h6>
										  
											  <div class="categories">
												<div class="categories-wrapper height-0 p-1">
												  <% category.forEach((item) => { %>
												  <div class="form-check">
													<input class="form-check-input category-checkbox" type="checkbox" value="<%= item._id %>"
													  id="chekCate<%= item._id %>">
													<label class="form-check-label" for="chekCate<%= item._id %>">
													  <span><%= item.name %></span><span class="product-number"></span>
													</label>
												  </div>
												  <% }) %>
												</div>
											  </div>
											  <hr>
											  <div class="Price">
												<h6 class="p-1 fw-bold bg-light">Price</h6>
												<div class="Price-wrapper p-1">
												  <div class="input-group">
													<input type="text" class="form-control rounded-0" id="minPrice" placeholder="Rs. 10">
													<span class="input-group-text bg-section-1 border-0">to</span>
													<input type="text" class="form-control rounded-0" id="maxPrice" placeholder="Rs. 1000">
													<!-- <button type="button" class="btn btn-outline-dark rounded-0 ms-2"> -->
													  <!-- <i class='bx bx-chevron-right me-0'></i>
													</button> -->
												  </div>
												</div>
											  </div>
											  <hr>
											  <button class="btn btn-primary" id="applyFilters">Filter</button>
											</div>
										  </div>
										  
									  </div>
									</div>
								  </div>
							  </nav>
							</div>
							<div class="col-12 col-xl-9">
								<div class="product-wrapper">
									<div class="toolbox d-flex align-items-center mb-3 gap-2 border p-3">
										<div class="d-flex flex-wrap flex-grow-1 gap-1">
											<div class="d-flex align-items-center flex-nowrap">
												<p class="mb-0 font-13 text-nowrap">Sort By:</p>
												<select id="sortSelect" class="form-select ms-3 rounded-0">
													<option value="menu_order" selected="selected">Default sorting</option>
													<option value="price">Sort by price: low to high</option>
													<option value="price-desc">Sort by price: high to low</option>
												</select>
											</div>
										</div>
										
									</div>

									 <div class="product-grid" >
										<div class="row row-cols-2 row-cols-md-3 row-cols-lg-3 row-cols-xl-3 row-cols-xxl-3 g-3 g-sm-4" id="productGrid">
											 
											 <% products.forEach((item) => { %> 
												 <div class="col " >
													<div class="card"  >
														<div class="position-relative overflow-hidden">
														  <a href="/product-detail/<%= item._id %>">
															<img src="/products/<%=item.images[0] %>" class="img-fluid" alt="...">
														  </a>
														</div>
														<div class="card-body px-0">
														  <div class="d-flex align-items-center justify-content-between">
															  <div class="">
																  <p class="mb-1 product-short-name">Topwear</p>
																  <h6 class="mb-0 fw-bold product-short-title"><%= item.name %></h6>
															  </div>
														  </div>
														  <div class="product-price d-flex align-items-center justify-content-start gap-2 mt-2">
															<div class="h6 fw-light fw-bold text-secondary text-decoration-line-through"><%= item.price %></div>
															<div class="h6 fw-bold">
																<% if (item.offer && item.offer.percentage) { %>
																	Rs. <%= calculateDiscountedPrice(item.price, item.offer.percentage) %> <span class="text-success">(<%=item.offer.percentage%>% off)</span>
																  <% } else { %>
																	Rs. <%= item.price %>
																  <% } %>
																	<% function calculateDiscountedPrice(originalPrice, discountPercentage) { %>
																		<% const discountAmount = originalPrice * (discountPercentage / 100); %>
																		<% const discountedPrice = originalPrice - discountAmount; %>
																		<% return Math.floor(discountedPrice); %>
																	  <% } %>
															</div>
														  </div>
														</div>							  
												  </div>
												</div> 
											<% }) %>   
											
										</div>
									</div> 


									
									
									  


									<hr>
									<!-- <nav class="d-flex justify-content-between" aria-label="Page navigation">
										<ul class="pagination">
											<li class="page-item"><a class="page-link" href="javascript:;"><i class='bx bx-chevron-left'></i> Prev</a>
											</li>
										</ul>
										<ul class="pagination">
											<li class="page-item active d-none d-sm-block" aria-current="page"><span class="page-link">1<span class="visually-hidden">(current)</span></span>
											</li>
											<li class="page-item d-none d-sm-block"><a class="page-link" href="javascript:;">2</a>
											</li>
											<li class="page-item d-none d-sm-block"><a class="page-link" href="javascript:;">3</a>
											</li>
											<li class="page-item d-none d-sm-block"><a class="page-link" href="javascript:;">4</a>
											</li>
											<li class="page-item d-none d-sm-block"><a class="page-link" href="javascript:;">5</a>
											</li>
										</ul>
										<ul class="pagination">
											<li class="page-item"><a class="page-link" href="javascript:;" aria-label="Next">Next <i class='bx bx-chevron-right'></i></a>
											</li>
										</ul>
									</nav> -->

									<nav class="d-flex justify-content-between" aria-label="Page navigation">
										<!-- <ul class="pagination">
											<li class="page-item"><a class="page-link" href="?page=<%= currentPage - 1 %>&limit=<%= limit %>"><i class='bx bx-chevron-left'></i> Prev</a></li>
										</ul> -->
									
										<ul class="pagination">
											<% for (let i = 1; i <= totalPages; i++) { %>
												<li class="page-item <%= i === currentPage ? 'active' : '' %>">
													<a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
												</li>
											<% } %>
										</ul>
									
										<!-- <ul class="pagination">
											<li class="page-item"><a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" aria-label="Next">Next <i class='bx bx-chevron-right'></i></a></li>
										</ul> -->
									</nav>
									

									<!-- <div class="pagination-area mt-15 mb-50">
										<nav aria-label="Page navigation example">
											<ul class="pagination justify-content-start">
									
												<% for (let i = 1; i <= totalPages; i++) { %>
													<li class="page-item <%= i === currentPage ? 'active' : '' %>">
														<a class="page-link" href="?page=<%= i %>&limit=<%= limit %>"><%= i %></a>
													</li>
												<% } %>
									
												<% if (currentPage < totalPages) { %>
													<li class="page-item">
														<a class="page-link" href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">
															<i class="material-icons md-chevron_right"></i>
														</a>
													</li>
												<% } %>
									
											</ul>
										</nav>
									</div> -->

								</div>
							</div>
						</div>
						<!--end row-->
					</div>
				</section>
				<!--end shop area-->
			</div>
		</div>
		<!--end page wrapper -->
		<!--start footer section-->
	

		
		<!-- <script>
			document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM is ready!');
  const applyFiltersButton = document.getElementById("applyFilters");
  const sortSelect = document.getElementById("sortSelect");
  const productGrid = document.getElementById("productGrid");

  // Move the calculateDiscountedPrice function outside of the template literal
  function calculateDiscountedPrice(originalPrice, discountPercentage) {
    const discountAmount = originalPrice * (discountPercentage / 100);
    const discountedPrice = originalPrice - discountAmount;
    return Math.floor(discountedPrice);
  }

  applyFiltersButton.addEventListener('click', () => {
    const selectedCategories = Array.from(document.querySelectorAll('.category-checkbox:checked'))
      .map(checkbox => checkbox.value);

    const minPrice = document.getElementById('minPrice').value;
    const maxPrice = document.getElementById('maxPrice').value;

    fetch(`/applyFilters?page=1&limit=6&categories=${selectedCategories.join(',')}&minPrice=${minPrice}&maxPrice=${maxPrice}`)
      .then(response => response.json())
      .then(data => {
		const sortedProducts = sortProducts(data.products, sortSelect.value);

        // Clear existing products in the product grid
        productGrid.innerHTML = '';

        // Render the new products
        sortedProducts.forEach(item => {
          const card = document.createElement('div');
          card.className = 'col';
          card.innerHTML = `
            <div class="card">
              <div class="position-relative overflow-hidden">
                <a href="/product-detail/${item._id}">
                  <img src="/products/${item.images[0]}" class="img-fluid" alt="...">
                </a>
              </div>
              <div class="card-body px-0">
                <div class="d-flex align-items-center justify-content-between">
                  <div>
                    <p class="mb-1 product-short-name">Topwear</p>
                    <h6 class="mb-0 fw-bold product-short-title">${item.name}</h6>
                  </div>
                </div>
                <div class="product-price d-flex align-items-center justify-content-start gap-2 mt-2">
                  <div class="h6 fw-light fw-bold text-secondary text-decoration-line-through">${item.price}</div>
                  <div class="h6 fw-bold">
                    ${item.offer && item.offer.percentage
                      ? `Rs. ${calculateDiscountedPrice(item.price, item.offer.percentage)} <span class="text-success">(${item.offer.percentage}% off)</span>`
                      : `Rs. ${item.price}`
                    }
                  </div>
                </div>
              </div>
            </div>
          `;

          // Append the card to the product grid
          productGrid.appendChild(card);
        });
      })
      .catch(error => console.error('Error applying filters:', error));
  });
  function sortProducts(products, sortBy) {
    return products.sort((a, b) => {
      if (sortBy === 'price') {
        return a.price - b.price;
      } else if (sortBy === 'price-desc') {
        return b.price - a.price;
      }
      // Add additional sorting options if needed
      return 0;
    });
  }
});

			</script> -->

		


<script>
	document.addEventListener('DOMContentLoaded', () => {
  console.log('DOM is ready!');
  const applyFiltersButton = document.getElementById("applyFilters");
  const sortSelect = document.getElementById("sortSelect");
  const productGrid = document.getElementById("productGrid");

  function calculateDiscountedPrice(originalPrice, discountPercentage) {
    const discountAmount = originalPrice * (discountPercentage / 100);
    const discountedPrice = originalPrice - discountAmount;
    return Math.floor(discountedPrice);
  }

  function applyFiltersAndSort() {
    const selectedCategories = Array.from(document.querySelectorAll('.category-checkbox:checked'))
      .map(checkbox => checkbox.value);

    const minPrice = document.getElementById('minPrice').value;
    const maxPrice = document.getElementById('maxPrice').value;

    fetch(`/applyFilters?page=1&limit=6&categories=${selectedCategories.join(',')}&minPrice=${minPrice}&maxPrice=${maxPrice}`)
      .then(response => response.json())
      .then(data => {
        // Sort the products based on the selected option
		console.log(data)
        const sortedProducts = sortProducts(data.products, sortSelect.value);

        // Clear existing products in the product grid
        productGrid.innerHTML = '';

        // Render the new products
        sortedProducts.forEach(item => {
          const card = document.createElement('div');
          card.className = 'col';
          card.innerHTML = `
            <div class="card">
              <div class="position-relative overflow-hidden">
                <a href="/product-detail/${item._id}">
                  <img src="/products/${item.images[0]}" class="img-fluid" alt="...">
                </a>
              </div>
              <div class="card-body px-0">
                <div class="d-flex align-items-center justify-content-between">
                  <div>
                    <p class="mb-1 product-short-name">Topwear</p>
                    <h6 class="mb-0 fw-bold product-short-title">${item.name}</h6>
                  </div>
                </div>
                <div class="product-price d-flex align-items-center justify-content-start gap-2 mt-2">
                  <div class="h6 fw-light fw-bold text-secondary text-decoration-line-through">${item.price}</div>
                  <div class="h6 fw-bold">
                    ${item.offer && item.offer.percentage
                      ? `Rs. ${calculateDiscountedPrice(item.price, item.offer.percentage)} <span class="text-success">(${item.offer.percentage}% off)</span>`
                      : `Rs. ${item.price}`
                    }
                  </div>
                </div>
              </div>
            </div>
          `;
          // Append the card to the product grid
          productGrid.appendChild(card);
        });
      })
      .catch(error => console.error('Error applying filters:', error));
  }

  // Function to sort products based on the selected option
  function sortProducts(products, sortBy) {
    return products.sort((a, b) => {
      if (sortBy === 'price') {
        return a.price - b.price;
      } else if (sortBy === 'price-desc') {
        return b.price - a.price;
      }
      // Add additional sorting options if needed
      return 0;
    });
  }

  // Event listener for the "Apply Filters" button click
  applyFiltersButton.addEventListener('click', applyFiltersAndSort);

  // Event listener for the dropdown change event
  sortSelect.addEventListener('change', applyFiltersAndSort);
});
  
</script>





		<%- include('../layouts/footer') %>